name: Use Reusable Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # Install dependencies only if the dependencies haven't been cached
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps # For local actions
      - name: Test code
        id: test-phase
        run: npm run test
      - name: Upload test report
        # ${{  }} we can omit the expression because GitHub understand this is going to be something dynamic to evaluate
        # We upload the artifact if the test fails
        # failure() is used to run the step even if the previous one faileds
        if: failure() && steps.test-phase.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # Install dependencies only if the dependencies haven't been cached
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml # Uses a custom workflow
    with:
      artifact-name: dist-files
    # In case we need to pass custom secrets
    # secrets:
      # some-secrets: '${{ secrets.some-secret }}'
  print-deploy-result:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Print deploy output
        run: echo "${{ needs.outputs.result }}" # Needs to access to the job I'm depending on
  report:
    needs: [lint, deploy]
    if: failure() # Runs if any previous job/step fails
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ github }}"
